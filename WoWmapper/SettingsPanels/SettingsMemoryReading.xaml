<UserControl x:Class="WoWmapper.SettingsPanels.SettingsMemoryReading"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WoWmapper.SettingsPanels"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:properties="clr-namespace:WoWmapper.Properties"
             d:DesignHeight="500"
             d:DesignWidth="323"
             mc:Ignorable="d">
    <Grid Margin="5">
        <StackPanel>
            <TextBlock Margin="5,0"
                       FontSize="16"
                       Text="Memory Reading" />
            <Separator Margin="5" />
            <StackPanel Name="StackWarning"
                        Height="130"
                        Margin="5,0">
                <TextBlock Margin="5" TextWrapping="Wrap">
                    This feature reads information from World of Warcraft to assist with controller gameplay.
                </TextBlock>
                <TextBlock Margin="5,0" TextWrapping="Wrap">
                    By enabling this feature you understand that you may be putting your account at risk, and that you are solely responsible for any actions that may be taken against you or your account.
                </TextBlock>
                <TextBlock Margin="5"
                           Cursor="Hand"
                           Foreground="{StaticResource HighlightBrush}"
                           MouseDown="TextMoreInfo_Click"
                           TextAlignment="Center"
                           TextDecorations="Underline">
                    More information about this feature
                </TextBlock>
            </StackPanel>
            <StackPanel Name="StackContent" Margin="0">
                <CheckBox Name="CheckEnableMemoryReading"
                          Margin="13,5"
                          Checked="HideWarning"
                          Content="Enable memory reading"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                              Path=EnableMemoryReading}"
                          Unchecked="ShowWarning" />
                <Separator Margin="5" />
                <TabControl Margin="5,0" IsEnabled="{Binding ElementName=CheckEnableMemoryReading, Path=IsChecked}">
                    <TabItem controls:ControlsHelper.HeaderFontSize="16" Header="General">
                        <StackPanel>
                            <CheckBox Margin="0,5"
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=MemoryOverrideMenu}"
                                      ToolTip="Allows you to navigate character selection quickly without using the cursor.">
                                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock>Navigate character selection with</TextBlock>
                                    <Image Name="ImageMenuUp"
                                           Width="18"
                                           Height="18"
                                           Margin="2,0,0,0"
                                           Source="../Controllers/DS4/Buttons/CP_L_UP.png" />
                                    <Image Name="ImageMenuDown"
                                           Width="18"
                                           Height="18"
                                           Margin="0,0,2,0"
                                           Source="../Controllers/DS4/Buttons/CP_L_DOWN.png" />

                                    <TextBlock>and</TextBlock>
                                    <Image Name="ImageMenuConfirm"
                                           Width="18"
                                           Height="18"
                                           Margin="2,0"
                                           Source="../Controllers/DS4/Buttons/CP_R_DOWN.png" />
                                </StackPanel>
                            </CheckBox>
                            <CheckBox Margin="0,5"
                                      Content="Cancel mouselook when alt-tabbed"
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=MemoryAutoCancel}"
                                      ToolTip="Automatically cancels mouselook in-game when the game window loses focus." />
                            <CheckBox Margin="0,5"
                                      Content="Show cursor position on overlay during mouselook"
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=EnableOverlayCrosshair}"
                                      IsEnabled="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=EnableOverlay}"
                                      ToolTip="Shows a crosshair on the overlay that indicates the cursor position while mouselooking." />
                        </StackPanel>
                    </TabItem>
                    <TabItem controls:ControlsHelper.HeaderFontSize="16" Header="Input Assist">
                        <StackPanel>
                            <CheckBox Margin="0,5"
                                      Content="Auto-center mouse cursor after mouselook"
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=MemoryAutoCenter}"
                                      ToolTip="Moves the mouse cursor to the center of the screen after mouselook has been active for the configured minimum duration." />
                            <StackPanel Margin="0,0,0,5"
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal">
                                <TextBlock>Trigger after</TextBlock>
                                <TextBlock Margin="2,0" Text="{Binding ElementName=SliderAutoCancelDelay, Path=Value}" />
                                <TextBlock>ms</TextBlock>
                                <Slider Name="SliderAutoCancelDelay"
                                        Width="150"
                                        Margin="5,0"
                                        Maximum="10000"
                                        Minimum="0"
                                        Value="{Binding Source={x:Static properties:Settings.Default},
                                                        Path=MemoryAutoCenterDelay}" />
                            </StackPanel>
                            <DockPanel>
                                <CheckBox Margin="0,5"
                                          IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                              Path=MemoryAutoWalk}"
                                          ToolTip="Automatically toggle the walk hotkey when the analog stick is tilted below the defined threshold.">
                                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock>
                                            Auto-toggle run/walk at
                                        </TextBlock>
                                        <TextBlock Margin="5,0,0,0"
                                                   VerticalAlignment="Center"
                                                   Text="{Binding ElementName=SliderWalkThreshold,
                                                                  Path=Value}" />
                                        <TextBlock Text="%" />
                                    </StackPanel>
                                </CheckBox>
                                <Slider Name="SliderWalkThreshold"
                                        Width="100"
                                        Margin="5"
                                        HorizontalAlignment="Right"
                                        Maximum="120"
                                        Minimum="35"
                                        SmallChange="1"
                                        Value="{Binding Source={x:Static properties:Settings.Default},
                                                        Path=WalkThreshold}" />
                            </DockPanel>
                            <CheckBox Margin="0,5"
                                      Content="Disable touchpad while mouselook is active"
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=MemoryTouchpadCursorOnly}" />
                            <DockPanel>
                                <CheckBox Margin="0,5"
                                          Content="Override buttons when casting AoE spells"
                                          IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                              Path=MemoryOverrideAoeCast}"
                                          ToolTip="Confirm and cancel casting targeted AoE spells using buttons instead of mouse clicks." />

                            </DockPanel>
                            <StackPanel Width="240"
                                        Margin="22,0"
                                        HorizontalAlignment="Left">
                                <DockPanel Margin="2">
                                    <TextBlock VerticalAlignment="Center" Text="Cast Spell" />
                                    <ComboBox Name="ComboAoeConfirm"
                                              Width="150"
                                              HorizontalAlignment="Right"
                                              SelectionChanged="AoeOverride_Changed" />
                                </DockPanel>
                                <DockPanel Margin="2">
                                    <TextBlock VerticalAlignment="Center" Text="Cancel" />
                                    <ComboBox Name="ComboAoeCancel"
                                              Width="150"
                                              HorizontalAlignment="Right"
                                              SelectionChanged="AoeOverride_Changed" />
                                </DockPanel>
                            </StackPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem controls:ControlsHelper.HeaderFontSize="16" Header="Feedback">
                        <StackPanel>
                            <CheckBox Margin="0,5"
                                      Content="Vibrate controller when taking damage"
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=MemoryVibrationDamage}"
                                      ToolTip="Vibrates the controller based on the amount of damage your character is taking." />
                            <CheckBox Margin="0,5"
                                      Content="Vibrate controller when receiving healing"
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=MemoryVibrationHealing}"
                                      ToolTip="Gently vibrates the controller based on the amount of healing your character is receiving." />
                            <CheckBox Margin="5"
                                      Content="Colour lightbar by health percentage"
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default},
                                                          Path=MemoryLightbar}"
                                      ToolTip="Colours the DualShock 4 lightbar based on the amount of health you have remaining."
                                      Visibility="Collapsed" />
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </StackPanel>
        </StackPanel>

    </Grid>
</UserControl>