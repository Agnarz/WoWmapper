//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WoWmapper.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WoWmapper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WoWmapper.
        /// </summary>
        public static string APP_NAME {
            get {
                return ResourceManager.GetString("APP_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string COMMON_ERROR {
            get {
                return ResourceManager.GetString("COMMON_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left.
        /// </summary>
        public static string COMMON_LEFT {
            get {
                return ResourceManager.GetString("COMMON_LEFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right.
        /// </summary>
        public static string COMMON_RIGHT {
            get {
                return ResourceManager.GetString("COMMON_RIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Active).
        /// </summary>
        public static string CONTROLLER_ACTIVE {
            get {
                return ResourceManager.GetString("CONTROLLER_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Charging... [{0}%].
        /// </summary>
        public static string CONTROLLER_BATTERY_CHARGING {
            get {
                return ResourceManager.GetString("CONTROLLER_BATTERY_CHARGING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected.
        /// </summary>
        public static string CONTROLLER_BATTERY_CONNECTED {
            get {
                return ResourceManager.GetString("CONTROLLER_BATTERY_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discharging... [{0}%].
        /// </summary>
        public static string CONTROLLER_BATTERY_DISCHARGING {
            get {
                return ResourceManager.GetString("CONTROLLER_BATTERY_DISCHARGING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not connected.
        /// </summary>
        public static string CONTROLLER_BATTERY_DISCONNECTED {
            get {
                return ResourceManager.GetString("CONTROLLER_BATTERY_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Connected.
        /// </summary>
        public static string CONTROLLER_CONNECTED {
            get {
                return ResourceManager.GetString("CONTROLLER_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No active controller.
        /// </summary>
        public static string CONTROLLER_NOT_ACTIVE {
            get {
                return ResourceManager.GetString("CONTROLLER_NOT_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller {0}.
        /// </summary>
        public static string CONTROLLER_NUMBER {
            get {
                return ResourceManager.GetString("CONTROLLER_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press the new key for {0}. Existing keys will be swapped..
        /// </summary>
        public static string DIALOG_BIND_KEY_TEXT {
            get {
                return ResourceManager.GetString("DIALOG_BIND_KEY_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Binding.
        /// </summary>
        public static string DIALOG_BIND_KEY_TITLE {
            get {
                return ResourceManager.GetString("DIALOG_BIND_KEY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while updating ConsolePort..
        /// </summary>
        public static string DIALOG_CONSOLEPORT_UPDATE_FAILED {
            get {
                return ResourceManager.GetString("DIALOG_CONSOLEPORT_UPDATE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while updating ConsolePort:
        ///{0}.
        /// </summary>
        public static string DIALOG_CONSOLEPORT_UPDATE_FAILED_MESSAGE {
            get {
                return ResourceManager.GetString("DIALOG_CONSOLEPORT_UPDATE_FAILED_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConsolePort was successfully updated to version {0}!.
        /// </summary>
        public static string DIALOG_CONSOLEPORT_UPDATE_SUCCESS {
            get {
                return ResourceManager.GetString("DIALOG_CONSOLEPORT_UPDATE_SUCCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConsolePort Update.
        /// </summary>
        public static string DIALOG_CONSOLEPORT_UPDATE_TITLE {
            get {
                return ResourceManager.GetString("DIALOG_CONSOLEPORT_UPDATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error downloading the file, please try again later..
        /// </summary>
        public static string DIALOG_DOWNLOAD_FAILED_TEXT {
            get {
                return ResourceManager.GetString("DIALOG_DOWNLOAD_FAILED_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download failed.
        /// </summary>
        public static string DIALOG_DOWNLOAD_FAILED_TITLE {
            get {
                return ResourceManager.GetString("DIALOG_DOWNLOAD_FAILED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File download in progress, please wait....
        /// </summary>
        public static string DIALOG_DOWNLOAD_TEXT {
            get {
                return ResourceManager.GetString("DIALOG_DOWNLOAD_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading.
        /// </summary>
        public static string DIALOG_DOWNLOAD_TITLE {
            get {
                return ResourceManager.GetString("DIALOG_DOWNLOAD_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the left and right triggers will activate an extra binding when they reach a certain point. With the triggers as Shift or Control, you can use a full trigger press to activate an extra binding..
        /// </summary>
        public static string DIALOG_HELP_TRIGGER_GRIP_TEXT {
            get {
                return ResourceManager.GetString("DIALOG_HELP_TRIGGER_GRIP_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger Grip Binding.
        /// </summary>
        public static string DIALOG_HELP_TRIGGER_GRIP_TITLE {
            get {
                return ResourceManager.GetString("DIALOG_HELP_TRIGGER_GRIP_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must select your World of Warcraft installation directory first..
        /// </summary>
        public static string DIALOG_SELECT_WOW {
            get {
                return ResourceManager.GetString("DIALOG_SELECT_WOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WoW not found.
        /// </summary>
        public static string DIALOG_SELECT_WOW_TITLE {
            get {
                return ResourceManager.GetString("DIALOG_SELECT_WOW_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We were unable to locate your WoW installation. This is required for some features.
        ///
        ///Would you like to locate it now?.
        /// </summary>
        public static string DIALOG_WOW_NOT_FOUND_TEXT {
            get {
                return ResourceManager.GetString("DIALOG_WOW_NOT_FOUND_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate World of Warcraft.
        /// </summary>
        public static string DIALOG_WOW_NOT_FOUND_TITLE {
            get {
                return ResourceManager.GetString("DIALOG_WOW_NOT_FOUND_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred with the DS4 driver, and it has been disabled.
        ///
        ///The error was:
        ///{0}.
        /// </summary>
        public static string ERROR_DS4_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_DS4_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Driver error.
        /// </summary>
        public static string ERROR_TITLE_DRIVER {
            get {
                return ResourceManager.GetString("ERROR_TITLE_DRIVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred with the Xbox driver, and it has been disabled.
        ///
        ///The error was:
        ///{0}.
        /// </summary>
        public static string ERROR_XBOX_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_XBOX_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By continuing, you acknowledge the risks associated with this feature..
        /// </summary>
        public static string FEEDBACK_WARNING_TEXT {
            get {
                return ResourceManager.GetString("FEEDBACK_WARNING_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Features Warning.
        /// </summary>
        public static string FEEDBACK_WARNING_TITLE {
            get {
                return ResourceManager.GetString("FEEDBACK_WARNING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string MAIN_BUTTON_SETTINGS {
            get {
                return ResourceManager.GetString("MAIN_BUTTON_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller Status.
        /// </summary>
        public static string MAIN_CONTROLLER_TITLE {
            get {
                return ResourceManager.GetString("MAIN_CONTROLLER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Software Updates.
        /// </summary>
        public static string MAIN_UPDATE_TITLE {
            get {
                return ResourceManager.GetString("MAIN_UPDATE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to World of Warcraft Status.
        /// </summary>
        public static string MAIN_WOW_TITLE {
            get {
                return ResourceManager.GetString("MAIN_WOW_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controllers.
        /// </summary>
        public static string NOTIFY_MENU_CONTROLLERS {
            get {
                return ResourceManager.GetString("NOTIFY_MENU_CONTROLLERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string NOTIFY_MENU_EXIT {
            get {
                return ResourceManager.GetString("NOTIFY_MENU_EXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keybinds.
        /// </summary>
        public static string NOTIFY_MENU_KEYBINDS {
            get {
                return ResourceManager.GetString("NOTIFY_MENU_KEYBINDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open WoWmapper.
        /// </summary>
        public static string NOTIFY_MENU_OPEN_WOWMAPPER {
            get {
                return ResourceManager.GetString("NOTIFY_MENU_OPEN_WOWMAPPER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About WoWmapper.
        /// </summary>
        public static string OPTIONS_ABOUT_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_ABOUT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to English translation by Topher Sheridan.
        /// </summary>
        public static string OPTIONS_ABOUT_TRANSLATION_CREDIT {
            get {
                return ResourceManager.GetString("OPTIONS_ABOUT_TRANSLATION_CREDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Advanced Features.
        /// </summary>
        public static string OPTIONS_ADVANCED_FEATURES_CHECKBOX {
            get {
                return ResourceManager.GetString("OPTIONS_ADVANCED_FEATURES_CHECKBOX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Features.
        /// </summary>
        public static string OPTIONS_ADVANCED_FEATURES_HEADER {
            get {
                return ResourceManager.GetString("OPTIONS_ADVANCED_FEATURES_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this option allows WoWmapper to read certain values from the game&apos;s memory, such as your character&apos;s level, health and target.
        ///
        ///Accessing the game in this manner may be a violation of the World of Warcraft Terms of Use. For more information, please visit the link below..
        /// </summary>
        public static string OPTIONS_ADVANCED_FEATURES_WARNING {
            get {
                return ResourceManager.GetString("OPTIONS_ADVANCED_FEATURES_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Settings.
        /// </summary>
        public static string OPTIONS_ADVANCED_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_ADVANCED_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accent.
        /// </summary>
        public static string OPTIONS_APPEARANCE_ACCENT {
            get {
                return ResourceManager.GetString("OPTIONS_APPEARANCE_ACCENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color window automatically by class.
        /// </summary>
        public static string OPTIONS_APPEARANCE_CLASS_COLOR {
            get {
                return ResourceManager.GetString("OPTIONS_APPEARANCE_CLASS_COLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable drop shadow.
        /// </summary>
        public static string OPTIONS_APPEARANCE_DROP_SHADOW {
            get {
                return ResourceManager.GetString("OPTIONS_APPEARANCE_DROP_SHADOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string OPTIONS_APPEARANCE_LANGUAGE {
            get {
                return ResourceManager.GetString("OPTIONS_APPEARANCE_LANGUAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The setting will be applied the next time you start WoWmapper.
        /// </summary>
        public static string OPTIONS_APPEARANCE_RESTART_APP {
            get {
                return ResourceManager.GetString("OPTIONS_APPEARANCE_RESTART_APP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme.
        /// </summary>
        public static string OPTIONS_APPEARANCE_THEME {
            get {
                return ResourceManager.GetString("OPTIONS_APPEARANCE_THEME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appearance.
        /// </summary>
        public static string OPTIONS_APPEARANCE_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_APPEARANCE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate.
        /// </summary>
        public static string OPTIONS_CONTROLLERS_ACTIVATE {
            get {
                return ResourceManager.GetString("OPTIONS_CONTROLLERS_ACTIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically activate controller.
        /// </summary>
        public static string OPTIONS_CONTROLLERS_AUTO_SELECT {
            get {
                return ResourceManager.GetString("OPTIONS_CONTROLLERS_AUTO_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected Controllers.
        /// </summary>
        public static string OPTIONS_CONTROLLERS_DETECTED {
            get {
                return ResourceManager.GetString("OPTIONS_CONTROLLERS_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable DualShock 4.
        /// </summary>
        public static string OPTIONS_CONTROLLERS_ENABLE_DS4 {
            get {
                return ResourceManager.GetString("OPTIONS_CONTROLLERS_ENABLE_DS4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Xbox Controller.
        /// </summary>
        public static string OPTIONS_CONTROLLERS_ENABLE_XBOX {
            get {
                return ResourceManager.GetString("OPTIONS_CONTROLLERS_ENABLE_XBOX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-scan.
        /// </summary>
        public static string OPTIONS_CONTROLLERS_SCAN {
            get {
                return ResourceManager.GetString("OPTIONS_CONTROLLERS_SCAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controllers.
        /// </summary>
        public static string OPTIONS_CONTROLLERS_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_CONTROLLERS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        public static string OPTIONS_CURSOR_ADVANCED {
            get {
                return ResourceManager.GetString("OPTIONS_CURSOR_ADVANCED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analog Stick.
        /// </summary>
        public static string OPTIONS_CURSOR_ANALOG {
            get {
                return ResourceManager.GetString("OPTIONS_CURSOR_ANALOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-center cursor after mouselook.
        /// </summary>
        public static string OPTIONS_CURSOR_AUTO_CENTER {
            get {
                return ResourceManager.GetString("OPTIONS_CURSOR_AUTO_CENTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curve.
        /// </summary>
        public static string OPTIONS_CURSOR_CURVE {
            get {
                return ResourceManager.GetString("OPTIONS_CURSOR_CURVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deadzone.
        /// </summary>
        public static string OPTIONS_CURSOR_DEADZONE {
            get {
                return ResourceManager.GetString("OPTIONS_CURSOR_DEADZONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speed.
        /// </summary>
        public static string OPTIONS_CURSOR_SPEED {
            get {
                return ResourceManager.GetString("OPTIONS_CURSOR_SPEED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cursor.
        /// </summary>
        public static string OPTIONS_CURSOR_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_CURSOR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Touchpad.
        /// </summary>
        public static string OPTIONS_CURSOR_TOUCHPAD {
            get {
                return ResourceManager.GetString("OPTIONS_CURSOR_TOUCHPAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Advanced Features from the Advanced Settings menu for more options..
        /// </summary>
        public static string OPTIONS_HAPTICS_ENABLE_ADVANCED {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_ENABLE_ADVANCED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color lightbar with class color.
        /// </summary>
        public static string OPTIONS_HAPTICS_LIGHTBAR_CLASS {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_LIGHTBAR_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color lightbar.
        /// </summary>
        public static string OPTIONS_HAPTICS_LIGHTBAR_COLOR {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_LIGHTBAR_COLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color lightbar by remaining health.
        /// </summary>
        public static string OPTIONS_HAPTICS_LIGHTBAR_HEALTH {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_LIGHTBAR_HEALTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flash lightbar when battery is low.
        /// </summary>
        public static string OPTIONS_HAPTICS_LIGHTBAR_LOW_BATTERY {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_LIGHTBAR_LOW_BATTERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Haptic Feedback.
        /// </summary>
        public static string OPTIONS_HAPTICS_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vibrate when taking damage.
        /// </summary>
        public static string OPTIONS_HAPTICS_VIBRATE_DAMAGE {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_VIBRATE_DAMAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vibrate when battery is low.
        /// </summary>
        public static string OPTIONS_HAPTICS_VIBRATE_LOW_BATTERY {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_VIBRATE_LOW_BATTERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vibrate when switching target.
        /// </summary>
        public static string OPTIONS_HAPTICS_VIBRATE_TARGET {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_VIBRATE_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vibrate when activating trigger click.
        /// </summary>
        public static string OPTIONS_HAPTICS_VIBRATE_TRIGGER_CLICK {
            get {
                return ResourceManager.GetString("OPTIONS_HAPTICS_VIBRATE_TRIGGER_CLICK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string OPTIONS_HEADER {
            get {
                return ResourceManager.GetString("OPTIONS_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXPORT.
        /// </summary>
        public static string OPTIONS_KEYBINDS_EXPORT {
            get {
                return ResourceManager.GetString("OPTIONS_KEYBINDS_EXPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IMPORT.
        /// </summary>
        public static string OPTIONS_KEYBINDS_IMPORT {
            get {
                return ResourceManager.GetString("OPTIONS_KEYBINDS_IMPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RESET KEYBINDS.
        /// </summary>
        public static string OPTIONS_KEYBINDS_RESET {
            get {
                return ResourceManager.GetString("OPTIONS_KEYBINDS_RESET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keybinds.
        /// </summary>
        public static string OPTIONS_KEYBINDS_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_KEYBINDS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset all settings.
        /// </summary>
        public static string OPTIONS_RESET_ALL {
            get {
                return ResourceManager.GetString("OPTIONS_RESET_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will delete all WoWmapper settings and keybinds and exit the program. Are you sure you want to continue?.
        /// </summary>
        public static string OPTIONS_RESET_ALL_TEXT {
            get {
                return ResourceManager.GetString("OPTIONS_RESET_ALL_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset all settings.
        /// </summary>
        public static string OPTIONS_RESET_ALL_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_RESET_ALL_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About WoWmapper.
        /// </summary>
        public static string OPTIONS_TREE_ABOUT {
            get {
                return ResourceManager.GetString("OPTIONS_TREE_ABOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        public static string OPTIONS_TREE_ADVANCED {
            get {
                return ResourceManager.GetString("OPTIONS_TREE_ADVANCED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Settings.
        /// </summary>
        public static string OPTIONS_TREE_ADVANCED_SETTINGS {
            get {
                return ResourceManager.GetString("OPTIONS_TREE_ADVANCED_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string OPTIONS_TREE_INPUT {
            get {
                return ResourceManager.GetString("OPTIONS_TREE_INPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferences.
        /// </summary>
        public static string OPTIONS_TREE_PREFERENCES {
            get {
                return ResourceManager.GetString("OPTIONS_TREE_PREFERENCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Trigger Grip.
        /// </summary>
        public static string OPTIONS_TRIGGERS_ENABLE_CLICK {
            get {
                return ResourceManager.GetString("OPTIONS_TRIGGERS_ENABLE_CLICK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger Grip Thresholds.
        /// </summary>
        public static string OPTIONS_TRIGGERS_GRIP_THRESHOLDS {
            get {
                return ResourceManager.GetString("OPTIONS_TRIGGERS_GRIP_THRESHOLDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger Thresholds.
        /// </summary>
        public static string OPTIONS_TRIGGERS_THRESHOLDS {
            get {
                return ResourceManager.GetString("OPTIONS_TRIGGERS_THRESHOLDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggers.
        /// </summary>
        public static string OPTIONS_TRIGGERS_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_TRIGGERS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Architecture.
        /// </summary>
        public static string OPTIONS_WOW_ARCHITECTURE {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_ARCHITECTURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 32-bit.
        /// </summary>
        public static string OPTIONS_WOW_ARCHITECTURE_32 {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_ARCHITECTURE_32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 64-bit.
        /// </summary>
        public static string OPTIONS_WOW_ARCHITECTURE_64 {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_ARCHITECTURE_64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Select.
        /// </summary>
        public static string OPTIONS_WOW_ARCHITECTURE_AUTO {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_ARCHITECTURE_AUTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Path.
        /// </summary>
        public static string OPTIONS_WOW_FOLDER {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locate Installation Path.
        /// </summary>
        public static string OPTIONS_WOW_FOLDER_BROWSE {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_FOLDER_BROWSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select WoW installation folder.
        /// </summary>
        public static string OPTIONS_WOW_FOLDER_BROWSE_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_FOLDER_BROWSE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you selected does not appear to contain World of Warcraft..
        /// </summary>
        public static string OPTIONS_WOW_FOLDER_INVALID_TEXT {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_FOLDER_INVALID_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid folder.
        /// </summary>
        public static string OPTIONS_WOW_FOLDER_INVALID_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_FOLDER_INVALID_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send keystrokes directly to game window.
        /// </summary>
        public static string OPTIONS_WOW_SEND_KEYS_DIRECT {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_SEND_KEYS_DIRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to World of Warcraft.
        /// </summary>
        public static string OPTIONS_WOW_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_WOW_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close to tray.
        /// </summary>
        public static string OPTIONS_WOWMAPPER_CLOSE_TRAY {
            get {
                return ResourceManager.GetString("OPTIONS_WOWMAPPER_CLOSE_TRAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimize to tray.
        /// </summary>
        public static string OPTIONS_WOWMAPPER_MINIMIZE_TRAY {
            get {
                return ResourceManager.GetString("OPTIONS_WOWMAPPER_MINIMIZE_TRAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start minimized.
        /// </summary>
        public static string OPTIONS_WOWMAPPER_START_MINIMIZED {
            get {
                return ResourceManager.GetString("OPTIONS_WOWMAPPER_START_MINIMIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WoWmapper.
        /// </summary>
        public static string OPTIONS_WOWMAPPER_TITLE {
            get {
                return ResourceManager.GetString("OPTIONS_WOWMAPPER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap playstation_24 {
            get {
                object obj = ResourceManager.GetObject("playstation_24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Touchpad mode.
        /// </summary>
        public static string TOUCHPAD_MODE {
            get {
                return ResourceManager.GetString("TOUCHPAD_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Touch Buttons.
        /// </summary>
        public static string TOUCHPAD_MODE_BUTTONS {
            get {
                return ResourceManager.GetString("TOUCHPAD_MODE_BUTTONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Share &amp; Options.
        /// </summary>
        public static string TOUCHPAD_MODE_EMULATE_CENTER {
            get {
                return ResourceManager.GetString("TOUCHPAD_MODE_EMULATE_CENTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse Control.
        /// </summary>
        public static string TOUCHPAD_MODE_MOUSE {
            get {
                return ResourceManager.GetString("TOUCHPAD_MODE_MOUSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking....
        /// </summary>
        public static string VERSION_CHECKING {
            get {
                return ResourceManager.GetString("VERSION_CHECKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} is available!.
        /// </summary>
        public static string VERSION_CONSOLEPORT_AVAILABLE {
            get {
                return ResourceManager.GetString("VERSION_CONSOLEPORT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConsolePort {0}.
        /// </summary>
        public static string VERSION_CONSOLEPORT_CURRENT {
            get {
                return ResourceManager.GetString("VERSION_CONSOLEPORT_CURRENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No new version available.
        /// </summary>
        public static string VERSION_NO_NEW_VERSION {
            get {
                return ResourceManager.GetString("VERSION_NO_NEW_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string VERSION_UPDATE_BUTTON {
            get {
                return ResourceManager.GetString("VERSION_UPDATE_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string VERSION_UPDATE_INSTALL {
            get {
                return ResourceManager.GetString("VERSION_UPDATE_INSTALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConsolePort is not installed!.
        /// </summary>
        public static string VERSION_UPDATE_NO_CONSOLEPORT {
            get {
                return ResourceManager.GetString("VERSION_UPDATE_NO_CONSOLEPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} is available!.
        /// </summary>
        public static string VERSION_WOWMAPPER_AVAILABLE {
            get {
                return ResourceManager.GetString("VERSION_WOWMAPPER_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WoWmapper {0}.
        /// </summary>
        public static string VERSION_WOWMAPPER_CURRENT {
            get {
                return ResourceManager.GetString("VERSION_WOWMAPPER_CURRENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to World of Warcraft not running.
        /// </summary>
        public static string WOW_NOT_RUNNING {
            get {
                return ResourceManager.GetString("WOW_NOT_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to World of Warcraft is running (32-bit).
        /// </summary>
        public static string WOW_RUNNING_32 {
            get {
                return ResourceManager.GetString("WOW_RUNNING_32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to World of Warcraft is running (64-bit).
        /// </summary>
        public static string WOW_RUNNING_64 {
            get {
                return ResourceManager.GetString("WOW_RUNNING_64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon WoWmapper_Icon {
            get {
                object obj = ResourceManager.GetObject("WoWmapper_Icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap xbox_24 {
            get {
                object obj = ResourceManager.GetObject("xbox_24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
